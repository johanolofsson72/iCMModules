if (typeof(Array.prototype.push)=="\x75\156d\x65\x66ine\x64"){Array.prototype.push= function (){var le=RadMenuHelperUtils.Oe(this ); if (typeof(le)=="undefine\x64"){le=-1; }for (var i=0; i<arguments.length; i++){ this[ ++le]=arguments[i]; }};}if (typeof(Array.prototype.pop)=="undefined"){Array.prototype.pop= function (){var le=RadMenuHelperUtils.Oe(this ); var l2x; if (typeof(le)!="un\x64efined"){l2x=this[le]; delete this[le]; }return l2x; };}if (typeof(Array.prototype.shift)=="\165\x6e\x64efine\x64"){Array.prototype.shift= function (){var i2x=this[0]; for (var i=1; i<this.length; ++i){ this[i-1]=this[i]; } this.length--; return i2x; };}if (typeof(Array.prototype.unshift)=="\x75ndefined"){Array.prototype.unshift= function (){var i=unshift.arguments.length; for (var R=this.length-1; R>=0; --R){ this[R+i]=this[R]; }for (R=0; R<i; ++R){ this[R]=unshift.I2x[R]; }};}function RadHashtable(){ this.Keys=new Array(); this.Values=new Array(); }RadHashtable.prototype.Add= function (o2y){if (!o2y.ID){return; }var O2y=o2y.ID; if (this.IsValidKey(O2y)){ this.Values[this.Values.length]=o2y; if (this.Keys[O2y]){ this.Keys[O2y].length++; this.Keys[O2y][this.Keys[O2y].length-1]=(this.Values.length-1); }else { this.Keys[O2y]=new Array(1); this.Keys[O2y][0]=(this.Values.length-1); }}};RadHashtable.prototype.AddItem= function (l2y,i2y){if (!l2y || !i2y){return; }if (this.IsValidKey(l2y)){ this.Values[this.Values.length]=i2y; if (this.Keys[l2y]){ this.Keys[l2y].length++; this.Keys[l2y][this.Keys[l2y].length-1]=(this.Values.length-1); }else { this.Keys[l2y]=new Array(1); this.Keys[l2y][0]=(this.Values.length-1); }}};RadHashtable.prototype.I2y= function (o2z){for (var i=0; i<o2z.length; i++){ this.Add(o2z[i]); }};RadHashtable.prototype.Remove= function (O2y){ delete this.Values[this.Keys[O2y][0]]; delete this.Keys[O2y]; };RadHashtable.prototype.l17= function (O2y){if (this.Keys[O2y]){return this.Values[(this.Keys[O2y][0])]; }else {return null; }};RadHashtable.prototype.Set= function (o2y){var O2y=o2y.ID; if (this.Keys[O2y]){ this.Values[(this.Keys[O2y][0])]=o2y; }};RadHashtable.prototype.CopyTo= function (O2z){for (var i=0; i<this.Values.length; i++){O2z[i]=this.Values[i].toSource;}};RadHashtable.prototype.l2z= function (O2z){for (var i=0; i<this.Keys.length; i++){}};RadHashtable.prototype.i2z= function (O2y){if (this.Keys[O2y]){var I2z=this.Keys[O2y]; I2z=this.Keys[O2y].length; return ((I2z<=1)? true : false); }else {return true; }};RadHashtable.prototype.IsValidKey= function (o30){var O30=""+o30; var l30=O30.charCodeAt(0); return ((l30<48) || (l30>57)); };RadHashtable.prototype.Clear= function (){ this.Values=[]; this.Keys=[]; } ; RadHashtable.prototype.length= function (){return this.Values.length; };
